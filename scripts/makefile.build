
# the default target

export CFLAGS CXXFLAGS ASFLAGS

REALNAME=$(abspath $(firstword $(MAKEFILE_LIST)))


BUILT_IN_LD?=ld

ifeq ($(BUILD_DIR),)
    $(error "please set BUILD_DIR")
endif


default: default_build_target

bin-obj-y:=
obj-y:=
subdir-y:=

-include $(MAKEFILE_CONFIG)
include Makefile


cur_objs:= $(filter-out %/, $(obj-y))


dep_files += $(foreach f,$(cur_objs),.$(f).d) 
dep_files += $(foreach f,$(bin-obj-y),.$(f).d) 
dep_files += $(foreach f,$(so-obj-y),.$(f).d) 


subdir-y=$(patsubst %/,%,$(filter %/, $(obj-y)))

subdir_objs:= $(foreach d,$(subdir-y),$(d)/built-in.o) 

BUILT_IN_OBJ=$(BUILD_DIR)/built-in.o


asm_srcs= $(patsubst %.o,%.S,$(cur_objs))
real_asm_srcs=$(wildcard $(asm_srcs))
final_asm_srcs=$(patsubst %.S,%.s,$(addprefix $(BUILD_DIR)/, $(real_asm_srcs)))

ifneq ($(real_asm_srcs),)
$(final_asm_srcs):$(BUILD_DIR)/%.s:%.S
endif

prebuilt_objs=$(prebuilt-obj-y)

#real_subdir_built_in=$(foreach f, $(subdir_objs), $(wildcard $(f)) )
real_subdir_built_in=$(subdir_objs)
real_built_in_objs=$(real_subdir_built_in) $(curdir_objs) $(prebuilt_objs)

#add BUILD_DIR PREFIX
curdir_objs:=$(addprefix $(BUILD_DIR)/, $(cur_objs))
subdir_objs:=$(addprefix $(BUILD_DIR)/, $(subdir_objs))
curdir_deps:=$(addprefix $(BUILD_DIR)/,$(dep_files))
curdir_bin_objs:=$(addprefix $(BUILD_DIR)/,$(bin-obj-y))
curdir_so_objs:=$(addprefix $(BUILD_DIR)/,$(so-obj-y))


ifneq ($(MAKECMDGOALS),clean)
   -include $(curdir_deps)
endif

PHONY += $(subdir-y)


default_build_target: $(subdir-y) $(BUILT_IN_OBJ)  $(curdir_bin_objs) $(curdir_so_objs)

$(subdir-y):
	@$(MAKE) -C $@ -f $(REALNAME) $(MAKECMDGOALS) BUILD_DIR=$(BUILD_DIR)/$@

ifneq ($(strip $(real_built_in_objs)),)

ifneq ($(subdir_objs),)
$(subdir_objs): $(subdir-y);
endif

$(BUILT_IN_OBJ): $(real_built_in_objs) 
	@echo $(BUILT_IN_LD) -r -o $@  $(real_built_in_objs); \
               $(BUILT_IN_LD) -r -o $@ $(real_built_in_objs);
else
$(BUILT_IN_OBJ):
endif

clean::  $(subdir-y)
	@rm -rf $(curdir_objs) $(BUILT_IN_OBJ) $(curdir_deps) $(curdir_bin_objs) $(curdir_so_objs) $(final_asm_srcs)
		

build: default

test: default

.PHONY: $(PHONY)  all default clean default_build_target build install

# building rules 

REAL_CFLAGS+=$(CFLAGS) $(COMMON_CFLAGS)
REAL_CXXFLAGS+=$(CXXFLAGS) $(COMMON_CFLAGS)


$(BUILD_DIR)/%.o:%.c
	@mkdir -p $(@D)
	$(CC) $(REAL_CFLAGS) $($(*F)_CFLAGS) -c $< -o $@ 

$(BUILD_DIR)/%.o : %.cpp
	@mkdir -p $(@D)
	$(CXX) $(REAL_CXXFLAGS)  $($(*F)_CXXFLAGS) -c $< -o $@ 

$(BUILD_DIR)/%.o : %.cc
	@mkdir -p $(@D)
	$(CXX) $(REAL_CXXFLAGS)  $($(*F)_CXXFLAGS) -c $< -o $@ 

$(BUILD_DIR)/%.o : $(BUILD_DIR)/%.s
	@mkdir -p $(@D)
	$(CC) -g $(ASFLAGS)  $($(*F)_ASFLAGS) -c $< -o $@ 

$(BUILD_DIR)/%.s : %.S
	@mkdir -p $(@D)
	$(CC) $(REAL_CFLAGS)  $($(*F)_CFLAGS) -E $< -o $@

$(BUILD_DIR)/.%.o.d: %.c
	@mkdir -p $(@D);\
	$(CC) -MP -MM $(REAL_CFLAGS) $($(*F)_CFLAGS) $< | \
	sed -e 's@$(*F)\.o[ :]@$(@D)/$(*F)\.o $@ : @g' > $@; \
	if [ ! -s $@ ]; then rm $@; fi 

$(BUILD_DIR)/.%.o.d: %.cpp
	@mkdir -p $(@D);\
	$(CXX) -MP -MM $(REAL_CXXFLAGS) $($(*F)_CXXFLAGS) $< | \
	sed -e 's@$(*F)\.o[ :]@$(@D)/$(*F)\.o $@ : @g' > $@; \
	if [ ! -s $@ ]; then rm $@; fi 

$(BUILD_DIR)/.%.o.d: %.cc
	@mkdir -p $(@D);\
	$(CXX) -MP -MM $(REAL_CXXFLAGS) $($(*F)_CXXFLAGS) $< | \
	sed -e 's@$(*F)\.o[ :]@$(@D)/$(*F)\.o $@ : @g' > $@; \
	if [ ! -s $@ ]; then rm $@; fi 

$(BUILD_DIR)/.%.o.d: %.S
	@mkdir -p $(@D);\
	$(CC)  -MP -MM $(REAL_CFLAGS) $($(*F)_CFLAGS) $< >/dev/null| \
	sed -e 's@$(*F)\.o[ :]@$(@D)/$(*F)\.o $@ : @g' > $@; \

 

